---
- name: Ensure packages needed for Django are present
  apt: name={{ item }} state=present
  with_items:
    - libjpeg-dev # pillow
    - libpng12-dev # pillow
    - gettext

- name: Ensure py2 packages needed for Django are present
  apt: name={{ item }} state=present
  with_items:
    - python-dev
    - python-virtualenv
  when: not django_ispython3

- name: Ensure py3 packages needed for Django are present
  apt: name={{ item }} state=present
  with_items:
    - python3-dev
    - python3-venv
  when: django_ispython3

- name: Ensure required folders are there
  file: path={{ item }} state=directory owner={{ django_user }}
  with_items:
    - "{{ django_path }}"
    - "{{ django_static_path }}"
    - "{{ django_media_path }}"
    - "{{ django_maintenance_path }}"

# Every django project has easy-to-use dumpdb/restoredb scripts placed in django_path
- name: Ensure that we have dumpdb/restoredb scripts
  become: yes
  template:
    src: "{{ item }}_{{ django_dbtype }}.sh"
    dest: "{{ django_path }}/{{ item }}.sh"
    owner: "{{ django_user }}"
    mode: u=rwx,g=,o=
  with_items:
    - dumpdb
    - restoredb

- name: Initial restore DB/media from backup if needed
  shell: "{{ django_initial_data_restore_script }}"
  become: yes
  become_user: "{{ django_user }}"
  when: django_provide_initial_data and is_database_empty

- include: srcsync.yml

- name: Create maintenance page file
  become: yes
  template: src=maintenance.html dest={{ django_maintenance_path }}/maintenance.html
